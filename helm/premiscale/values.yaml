global:
  image:
    registry: docker.io


## @section PremiScale Controller


controller:
  deployment:
    image:
      name: premiscale
      tag: 0.0.1
      pullPolicy: Always
      pullSecrets: []

    resources:
      requests:
        cpu: 0.5
        memory: 1Gi
      limits:
        cpu: 4.0
        memory: 2Gi

    podSecurityContext: {}
    containerSecurityContext: {}

    annotations: {}
    labels: {}

    startupProbe:
      enabled: false
      path: /health
      port: 8080
      config: {}

    livenessProbe:
      enabled: false
      path: /health
      port: 8080
      config: {}

    readinessProbe:
      enabled: false
      path: /ready
      port: 8080
      config: {}

    ports:
      - name: http
        containerPort: 8080
        protocol: TCP

  registration:
    # If create is false, the secret must already exist, therefore 'name' and 'key' are used.
    createSecret: false

    secretName: premiscale-registration-token

    key: token

    value: ''
    immutable: true

  config:
    mountPath: /opt/premiscale/config.yaml

  logging:
    ## @param controller.logging.level [string] Can be one of info|debug|warn|error.
    level: info

  ## @param controller.extraEnv [list] Extra environment variables to be passed to the controller container. These are useful for injecting and referencing environment variables in the config that's read from the ConfigMap below.
  extraEnv: []


## @section IMDS


imds:
  ## @param imds.enabled [bool] Enable or disable the IMDS service. This API service is used to retrieve metadata from the controller databases.
  enabled: false
  port: 8085

  labels: {}
  annotations: {}

  ingress:
    ## @param imds.ingress.enabled [bool] Enable or disable the ingress. If the ingress is enabled, the controller service must also be enabled; the service type is automatically switched to LoadBalancer as well.
    enabled: false


## @section PremiScale Controller Config


configMap:
  enabled: false
  config: |+
    Your PremiScale controller config file.
  mountPath: /opt/premiscale
  immutable: false

  labels: {}
  annotations: {}


## @section Controller service


service:
  ## @param service.enabled [bool] Enable or disable the service. If ingress is enabled, the service type is automatically enabled and the type switched to LoadBalancer.
  enabled: true
  type: ClusterIP

  ports:
    liveness:
      protocol: TCP
      port: 8080
      targetPort: 8080
    imds:
      protocol: TCP
      port: 8085
      targetPort: 8085


## @section Kubernetes autoscaler


kubernetes-autoscaler:
  ## @param kubernetes-autoscaler.enabled [bool] Enable or disable the autoscaler dependency of the PremiScale controller. Enable this if you would like to autoscale the cluster on which the controller resides.
  enabled: false

  image:
    repository: kubernetes/cluster-autoscaler
    tag: v1.28.2
    pullPolicy: IfNotPresent

  resources:
    limits:
      cpu: 100m
      memory: 300Mi
    requests:
      cpu: 100m
      memory: 300Mi

  revisionHistoryLimit: 1

  # Pod securityContext
  securityContext: {}