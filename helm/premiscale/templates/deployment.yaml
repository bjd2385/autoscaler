apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ default .Values.deployment.name .Chart.Name }}
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  {{- with .Values.deployment.labels }}
  labels:
    {{- range $k, $v := . }}
    {{ $k }}: {{ $v }}
    {{- end }}
  {{- end }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- range $k, $v := . }}
    {{ $k }}: {{ $v }}
    {{- end }}
  {{- end }}
spec:
  ## DeploymentSpec v1 core
  replicas: {{ .Values.deployment.replicas | default 1 }}
  revisionHistoryLimit: 1
  # Select which pods (by label) this Deployment spec is targeting.
  selector:
    matchLabels: {{ include "premiscale.selectorLabels" . | nindent 6 }}
  template:
    ## PodTemplateSpec v1 core
    metadata:
      {{- with .Values.deployment.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{ include "premiscale.selectorLabels" . | nindent 8 }}
    # podAntiAffinity:
    #   preferredDuringSchedulingIgnoredDuringExecution:
    #   - weight: 100
    #     podAffinityTerm:
    #       labelSelector:
    #         matchExpressions:
    #         - key: security
    #           operator: In
    #           values:
    #           - S2
    #       topologyKey: topology.kubernetes.io/zone
    spec:
      ## PodSpec v1core
      {{- if gt (len (((((.Values).deployment).image).pullSecrets) | default "")) 0 }}
      imagePullSecrets:
        {{- range $secret := .Values.deployment.image.pullSecrets }}
        - name: {{ $secret }}
        {{- end }}
      {{- else if gt (len (((((.Values).global).image).pullSecrets) | default "")) 0 }}
      imagePullSecrets:
        {{- range $secret := .Values.global.image.pullSecrets }}
        - name: {{ $secret }}
        {{- end }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name | default .Chart.Name }}
      {{- end }}
      {{- with .Values.deployment.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        ## Container v1 core (array)
        - name: {{ default .Values.deployment.name .Chart.Name }}
          args: [
            --log-stdout,
            --log-level, {{ .Values.controller.logging.level }}
          ]
          {{- with .Values.deployment.livenessProbe }}
            {{- if .enabled }}
          ports:
            - name: healthcheck
              containerPort: 8080
              protocol: TCP
            {{- with .Values.deployment.extraPorts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- end }}
          {{- end }}
          env:
            - name: CONTROLLER_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONTROLLER_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: REGISTRATION_TOKEN
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.controller.registration.key }}
                  name: {{ .Values.controller.registration.secretName }}
            - name: PREMISCALE_PLATFORM
              value: {{ .Values.controller.platform.domain }}
            - name: PREMISCALE_CACERT
              value: {{ .Values.controller.platform.certificates.path }}
            # - name: CONTROLLER_HOST_SSH_PRIVATE_KEY
            #   {{- with .Values.controller.ssh }}
            #     {{- if .createSecret }}
            #   valueFrom:
            #     secretKeyRef:
            #       key: ssh-privatekey
            #       name: {{ .name }}
            #     {{- else }}
            #   value: {{ .value }}
            #     {{- end }}
            #   {{- end }}
            {{- with .Values.controller.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.deployment.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if (((.Values.global).image).registry) }}
          image: {{ .Values.global.image.registry }}/{{ .Values.deployment.image.name }}:{{ .Values.deployment.image.tag }}
          {{- else }}
          image: {{ .Values.deployment.image.registry }}/{{ .Values.deployment.image.name }}:{{ .Values.deployment.image.tag }}
          {{- end }}
          imagePullPolicy: {{ default .Values.deployment.image.pullPolicy "Always" }}
          {{- with .Values.deployment.startupProbe }}
            {{- if .enabled }}
          startupProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            {{- with .config }}
            {{- toYaml .| nindent 12 }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- with .Values.deployment.livenessProbe }}
            {{- if .enabled }}
          livenessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            {{- with .config }}
            {{- toYaml .| nindent 12 }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- with .Values.deployment.readinessProbe }}
            {{- if .enabled }}
          readinessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            {{- with .config }}
            {{- toYaml .| nindent 12 }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- with .Values.deployment.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}