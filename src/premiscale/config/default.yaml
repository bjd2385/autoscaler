## @param version [string] The version of the configuration file.
version: v1alpha1

## @section Controller Configuration

## @param controller [object] Configure the controller, such as database connection criteria and how often to take certain controller-specific actions.
controller:
  ## @param controller.pidFile [string, default: /opt/premiscale/premiscale.pid] Path to the file where the controller daemon process writes its PID.
  pidFile: /opt/premiscale/premiscale.pid

  ## @param controller.healthcheck [object] Configure the healthcheck endpoint for the controller.
  healthcheck:
    ## @param controller.healthcheck.host [string, default: 127.0.0.1] The host to bind the healthcheck endpoint to.
    host: 127.0.0.1

    ## @param controller.healthcheck.port [default: 8085] The port to bind the healthcheck endpoint to.
    port: 8085

    ## @param controller.healthcheck.path [string, default: /healthz] The path to bind the healthcheck endpoint to.
    path: /healthz

  ## @param contoller.databases [object] Configure the databases the controller uses to store state and metrics.
  databases:
    ## @param controller.databases.state [object] State is where the ASGs' current state as of the (latest reconciliation loop execution) is stored so it can be queried without making additional calls through libvirt.
    state:
      ## @param controller.databases.state.type [string, default: memory] The type of database to use for storing state. Can be 'mysql' or 'sqlite' or 'memory'.
      type: memory

      ## @param controller.databases.state.collectionInterval [default: 60] How often the agent collects metrics and stores them in the database.
      collectionInterval: 60

      ## @param controller.databases.state.connection [object] Connection details for the state database. If type 'memory' is used, this is ignored.
      connection: {}

    ## @param controller.databases.metrics [object] How often metrics collection is performed from every host.
    metrics:
      ## @param controller.databases.metrics.type [string, default: memory] The type of database to use for storing metrics. At this time, can be 'influxdb' or 'memory'.
      type: memory

      ## @param controller.databases.metrics.collectionInterval [default: 60] How often the agent retrieves metrics from all of the connected hosts.
      collectionInterval: 60

      ## @param controller.databases.metrics.maxThreads [default: 10] Establish connections to hosts in maxThreads-batches.
      maxThreads: 10

      ## @param controller.databases.metrics.hostConnectionTimeout [default: 60] How long to wait for a connection to a host before timing out.
      hostConnectionTimeout: 60

      ## @param controller.databases.metrics.trailing [default: 1200] Seconds of collected metrics to keep and evaluate upon (must be >=interval). Default is 20 minutes
      trailing: 1200

      ## @param controller.databases.metrics.connection [object] Connection details for the metrics database. If type 'memory' is used, this is ignored.
      connection: {}

  ## @param controller.platform [object] Configure the platform
  platform:
    ## @param controller.platform.actionsQueueMax [default: 0] The maximum number of actions from the platform to queue up before dropping them. 0 means no limit.
    actionsQueueMaxSize: 0

    ## @param controller.platform.domain [string, default: $PREMISCALE_PLATFORM] The domain of the platform.
    domain: $PREMISCALE_PLATFORM

    ## @param controller.platform.token [string, default: $PREMISCALE_TOKEN] The token to use to authenticate with the platform.
    token: $PREMISCALE_TOKEN

    ## @param controller.platform.certificates [object] For local-only testing, you can provide self-signed certificates to the controller for connection to the platform services.
    certificates:
      ## @param controller.platform.certificates.path [string, default: /opt/premiscale/certs] Path to a directory containing the controller's certificates.
      path: $PREMISCALE_CACERT

  ## @section Reconciliation Configuration

  reconciliation:
    ## @param controller.reconciliation.interval [default: 60] How often the controller reconciles the state of the ASGs. The controller collects metrics and state in separate databases and queues up actions for autoscaling groups in separate processes.
    interval: 60

  ## @section Autoscaling Configuration

  autoscale:
    ## @param autoscale.hosts [object, default: []] Groups of hosts to assign to ASGs.
    hosts: []

    ## @param controller.autoscale.groups [object] Specify and configure autoscaling groups on the hosts above.
    groups: {}